# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

defaults: &defaults
  docker:
    - image: circleci/node:13.8.0

commands:
  print_pipeline_id:
    description: "Print Circle CI Workflow ID"
    # Just create parameters for learning.
    parameters:
      to:
        type: string
        default: ""
    steps:
      - run: echo "${CIRCLE_WORKFLOW_ID}"

# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
# Orchestrate or schedule a set of jobs

jobs:
  job_that_will_be_failed:
    <<: *defaults
    steps:
      - run: return 1
  print_alert_message_when_any_job_fail:
    <<: *defaults
    steps:
      - run: 
          command: echo "A Job failed"
          when: on_fail
  print_pipelineID:
    <<: *defaults
    steps:
      - print_pipeline_id
  print_Myname:
    <<: *defaults
    steps:
      - run: echo $Name
  print_hello:
    <<: *defaults
    steps:
      - run: echo hello
  print_world:
    <<: *defaults
    steps:
      - run: echo world
  save_hello_world_output:
    <<: *defaults
    steps:
      - run:
          name: Save 'hello world' to text file
          command: echo "hello world" > output.txt
      - persist_to_workspace:
          root: .
          paths: 
            - output.txt
  print_output_file:
    <<: *defaults
    steps:
      - attach_workspace:
          at: .
      - run:
          name: print attached output text file
          command: cat output.txt

workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - job_that_will_be_failed
      - print_alert_message_when_any_job_fail
      - print_pipelineID
      - print_Myname
      - print_hello
      - print_world:
          requires: [print_hello]
      - save_hello_world_output
      - print_output_file:
          requires: [save_hello_world_output]
      - welcome/run
